name: Build

on:
  push:
    paths: ['.github/workflows/**', 'CMakeLists.txt', '**.cmake', '**.h', '*.c', '**.cpp', '**.ui']
  pull_request:
    types: [opened, synchronize, edited, reopened, review_requested, ready_for_review]
    paths: ['CMakeLists.txt', '**.cmake', '**.h', '*.c', '**.cpp', '**.ui']
  workflow_dispatch:

jobs:
  build:
    name: Building on ${{ matrix.os }} with Qt ${{ matrix.QT_VER }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
            QT_VER: 5.12.8
          - os: ubuntu-22.04
            QT_VER: 5.15.3
          - os: windows-latest
            QT_VER: 6.5.0
          - os: macos-latest
            QT_VER: 6.5.0

    steps:
    - name: Checkout repo and submodules
      uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - if: contains( matrix.os, 'windows') || contains( matrix.os, 'macos')
      name: Install Qt on Windows and Mac
      uses: jurplel/install-qt-action@v3
      with:
        aqtversion: '==3.1.*'
        py7zrversion: '>=0.20.2'
        cache: true
        version: '6.5.0'
        modules: 'qtimageformats qtmultimedia qtspeech'

    - if: contains( matrix.os, 'ubuntu')
      name: Install Qt on Linux
      run: |
        sudo apt-fast update
        sudo apt-fast install -y qtbase5-dev qtdeclarative5-dev qttools5-dev qtmultimedia5-dev libqt5texttospeech5-dev libqt5svg5-dev qt5ct 

    - name: Cache build directory
      uses: actions/cache@v3
      with:
        path: build
        key: ${{ matrix.os }}-build-${{ matrix.QT_VER }}
      exclude: |
      build/.git
      build/.gitignore

    - name: Build
      run: |
        mkdir -p build && cd build
        cmake ..
        cmake --build .
      shell: bash
